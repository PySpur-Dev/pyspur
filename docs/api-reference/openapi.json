{
    "openapi": "3.1.0",
    "info": {
        "title": "PySpur API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/node/supported_types/": {
            "get": {
                "tags": ["nodes"],
                "summary": "Get Node Types",
                "description": "Get the schemas for all available node types",
                "operationId": "get_node_types_node_supported_types__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": "object",
                                    "title": "Response Get Node Types Node Supported Types  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/paused_workflows/": {
            "get": {
                "tags": ["workflows", "workflows"],
                "summary": "List Paused Workflows",
                "description": "List all paused workflows",
                "operationId": "list_paused_workflows_wf_paused_workflows__get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PausedWorkflowResponseSchema"
                                    },
                                    "title": "Response List Paused Workflows Wf Paused Workflows  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/pause_history/{run_id}/": {
            "get": {
                "tags": ["workflows", "workflows"],
                "summary": "Get Pause History",
                "description": "Get pause history for a run",
                "operationId": "get_pause_history_wf_pause_history__run_id___get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PauseHistoryResponseSchema"
                                    },
                                    "title": "Response Get Pause History Wf Pause History  Run Id   Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/process_pause_action/{run_id}/": {
            "post": {
                "tags": ["workflows", "workflows"],
                "summary": "Take Pause Action",
                "description": "Take action on a paused workflow",
                "operationId": "take_pause_action_wf_process_pause_action__run_id___post",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResumeRunRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/": {
            "post": {
                "tags": ["workflows"],
                "summary": "Create Workflow",
                "description": "Create a new workflow",
                "operationId": "create_workflow_wf__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowCreateRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["workflows"],
                "summary": "List Workflows",
                "description": "List all workflows",
                "operationId": "list_workflows_wf__get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkflowResponseSchema"
                                    },
                                    "title": "Response List Workflows Wf  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/": {
            "put": {
                "tags": ["workflows"],
                "summary": "Update Workflow",
                "description": "Update a workflow",
                "operationId": "update_workflow_wf__workflow_id___put",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowCreateRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["workflows"],
                "summary": "Get Workflow",
                "description": "Get a workflow by ID",
                "operationId": "get_workflow_wf__workflow_id___get",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["workflows"],
                "summary": "Delete Workflow",
                "description": "Delete a workflow by ID",
                "operationId": "delete_workflow_wf__workflow_id___delete",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/reset/": {
            "put": {
                "tags": ["workflows"],
                "summary": "Reset Workflow",
                "description": "Reset a workflow to its initial state",
                "operationId": "reset_workflow_wf__workflow_id__reset__put",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/duplicate/": {
            "post": {
                "tags": ["workflows"],
                "summary": "Duplicate Workflow",
                "description": "Duplicate a workflow by ID",
                "operationId": "duplicate_workflow_wf__workflow_id__duplicate__post",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/output_variables/": {
            "get": {
                "tags": ["workflows"],
                "summary": "Get Workflow Output Variables",
                "description": "Get the output variables (leaf nodes) of a workflow",
                "operationId": "get_workflow_output_variables_wf__workflow_id__output_variables__get",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "title": "Response Get Workflow Output Variables Wf  Workflow Id  Output Variables  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/upload_test_files/": {
            "post": {
                "tags": ["workflows"],
                "summary": "Upload Test Files",
                "description": "Upload test files for a specific node in a workflow",
                "operationId": "upload_test_files_wf_upload_test_files__post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_test_files_wf_upload_test_files__post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "type": "object",
                                    "title": "Response Upload Test Files Wf Upload Test Files  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/versions/": {
            "get": {
                "tags": ["workflows", "workflows"],
                "summary": "Get Workflow Versions",
                "description": "Get all versions of a workflow",
                "operationId": "get_workflow_versions_wf__workflow_id__versions__get",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkflowVersionResponseSchema"
                                    },
                                    "title": "Response Get Workflow Versions Wf  Workflow Id  Versions  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/run/": {
            "post": {
                "tags": ["workflow runs"],
                "summary": "Run Workflow Blocking",
                "description": "Run a workflow and return the outputs",
                "operationId": "run_workflow_blocking_wf__workflow_id__run__post",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    },
                    {
                        "name": "run_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "interactive",
                            "title": "Run Type"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartRunRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Run Workflow Blocking Wf  Workflow Id  Run  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/start_run/": {
            "post": {
                "tags": ["workflow runs"],
                "summary": "Run Workflow Non Blocking",
                "description": "Start a non-blocking workflow run and return the run details",
                "operationId": "run_workflow_non_blocking_wf__workflow_id__start_run__post",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    },
                    {
                        "name": "run_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "interactive",
                            "title": "Run Type"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartRunRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/run_partial/": {
            "post": {
                "tags": ["workflow runs"],
                "summary": "Run Partial Workflow",
                "description": "Run a partial workflow and return the outputs",
                "operationId": "run_partial_workflow_wf__workflow_id__run_partial__post",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialRunRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Run Partial Workflow Wf  Workflow Id  Run Partial  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/start_batch_run/": {
            "post": {
                "tags": ["workflow runs"],
                "summary": "Batch Run Workflow Non Blocking",
                "description": "Start a batch run of a workflow over a dataset and return the run details",
                "operationId": "batch_run_workflow_non_blocking_wf__workflow_id__start_batch_run__post",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchRunRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/{workflow_id}/runs/": {
            "get": {
                "tags": ["workflow runs"],
                "summary": "List Runs",
                "description": "List all runs of a workflow",
                "operationId": "list_runs_wf__workflow_id__runs__get",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RunResponseSchema"
                                    },
                                    "title": "Response List Runs Wf  Workflow Id  Runs  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/cancel_workflow/{run_id}/": {
            "post": {
                "tags": ["workflow runs"],
                "summary": "Cancel Workflow",
                "description": "Cancel a workflow that is awaiting human approval",
                "operationId": "cancel_workflow_wf_cancel_workflow__run_id___post",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ds/": {
            "post": {
                "tags": ["datasets"],
                "summary": "Upload Dataset",
                "description": "Upload a new dataset",
                "operationId": "upload_dataset_ds__post",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Name"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "title": "Description"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_dataset_ds__post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["datasets"],
                "summary": "List Datasets",
                "description": "List all datasets",
                "operationId": "list_datasets_ds__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DatasetResponseSchema"
                                    },
                                    "title": "Response List Datasets Ds  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ds/{dataset_id}/": {
            "get": {
                "tags": ["datasets"],
                "summary": "Get Dataset",
                "description": "Get a dataset by ID",
                "operationId": "get_dataset_ds__dataset_id___get",
                "parameters": [
                    {
                        "name": "dataset_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Dataset Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatasetResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["datasets"],
                "summary": "Delete Dataset",
                "description": "Delete a dataset by ID",
                "operationId": "delete_dataset_ds__dataset_id___delete",
                "parameters": [
                    {
                        "name": "dataset_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Dataset Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ds/{dataset_id}/list_runs/": {
            "get": {
                "tags": ["datasets"],
                "summary": "List Dataset Runs",
                "description": "List all runs that used this dataset",
                "operationId": "list_dataset_runs_ds__dataset_id__list_runs__get",
                "parameters": [
                    {
                        "name": "dataset_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Dataset Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RunResponseSchema"
                                    },
                                    "title": "Response List Dataset Runs Ds  Dataset Id  List Runs  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/run/": {
            "get": {
                "tags": ["runs"],
                "summary": "List Runs",
                "description": "List all runs",
                "operationId": "list_runs_run__get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    },
                    {
                        "name": "parent_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Parent Only"
                        }
                    },
                    {
                        "name": "run_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Run Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RunResponseSchema"
                                    },
                                    "title": "Response List Runs Run  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/run/{run_id}/": {
            "get": {
                "tags": ["runs"],
                "summary": "Get Run",
                "operationId": "get_run_run__run_id___get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/run/{run_id}/status/": {
            "get": {
                "tags": ["runs"],
                "summary": "Get Run Status",
                "operationId": "get_run_status_run__run_id__status__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/of/": {
            "get": {
                "tags": ["output files"],
                "summary": "List Output Files",
                "description": "List all output files",
                "operationId": "list_output_files_of__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/OutputFileResponseSchema"
                                    },
                                    "type": "array",
                                    "title": "Response List Output Files Of  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/of/{output_file_id}/": {
            "get": {
                "tags": ["output files"],
                "summary": "Get Output File",
                "description": "Get an output file by ID",
                "operationId": "get_output_file_of__output_file_id___get",
                "parameters": [
                    {
                        "name": "output_file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Output File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OutputFileResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["output files"],
                "summary": "Delete Output File",
                "description": "Delete an output file by ID",
                "operationId": "delete_output_file_of__output_file_id___delete",
                "parameters": [
                    {
                        "name": "output_file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Output File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/of/{output_file_id}/download/": {
            "get": {
                "tags": ["output files"],
                "summary": "Download Output File",
                "description": "Download an output file by ID",
                "operationId": "download_output_file_of__output_file_id__download__get",
                "parameters": [
                    {
                        "name": "output_file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Output File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/env-mgmt/providers": {
            "get": {
                "tags": ["environment management"],
                "summary": "Get Providers",
                "description": "Get all provider configurations",
                "operationId": "get_providers_env_mgmt_providers_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/env-mgmt/": {
            "get": {
                "tags": ["environment management"],
                "summary": "List Api Keys",
                "description": "Get a list of all environment variable names",
                "operationId": "list_api_keys_env_mgmt__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["environment management"],
                "summary": "Set Api Key",
                "description": "Add or update an environment variable",
                "operationId": "set_api_key_env_mgmt__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIKey"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/env-mgmt/{name}": {
            "get": {
                "tags": ["environment management"],
                "summary": "Get Api Key",
                "description": "Get the masked value of a specific environment variable",
                "operationId": "get_api_key_env_mgmt__name__get",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["environment management"],
                "summary": "Delete Api Key",
                "description": "Delete an environment variable",
                "operationId": "delete_api_key_env_mgmt__name__delete",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/env-mgmt/embedding-models/": {
            "get": {
                "tags": ["environment management"],
                "summary": "Get Embedding Models",
                "description": "Get all available embedding models and their configurations.",
                "operationId": "get_embedding_models_env_mgmt_embedding_models__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/EmbeddingModelConfig"
                                    },
                                    "type": "object",
                                    "title": "Response Get Embedding Models Env Mgmt Embedding Models  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/env-mgmt/vector-stores/": {
            "get": {
                "tags": ["environment management"],
                "summary": "Get Vector Stores Endpoint",
                "description": "Get all available vector stores and their configurations.",
                "operationId": "get_vector_stores_endpoint_env_mgmt_vector_stores__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/VectorStoreConfig"
                                    },
                                    "type": "object",
                                    "title": "Response Get Vector Stores Endpoint Env Mgmt Vector Stores  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/templates/": {
            "get": {
                "tags": ["templates"],
                "summary": "List Templates",
                "description": "List all available templates",
                "operationId": "list_templates_templates__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TemplateSchema"
                                    },
                                    "type": "array",
                                    "title": "Response List Templates Templates  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/templates/instantiate/": {
            "post": {
                "tags": ["templates"],
                "summary": "Instantiate Template",
                "description": "Instantiate a new workflow from a template",
                "operationId": "instantiate_template_templates_instantiate__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/chat/completions": {
            "post": {
                "tags": ["openai compatible"],
                "summary": "Chat Completions",
                "description": "OpenAI-compatible chat completions endpoint",
                "operationId": "chat_completions_api_v1_chat_completions_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatCompletionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatCompletionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evals/": {
            "get": {
                "tags": ["evaluations"],
                "summary": "List Evals",
                "description": "List all available evals",
                "operationId": "list_evals_evals__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array",
                                    "title": "Response List Evals Evals  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evals/launch/": {
            "post": {
                "tags": ["evaluations"],
                "summary": "Launch Eval",
                "description": "Launch an eval job with detailed validation and workflow integration",
                "operationId": "launch_eval_evals_launch__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvalRunRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvalRunResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evals/runs/{eval_run_id}": {
            "get": {
                "tags": ["evaluations"],
                "summary": "Get Eval Run Status",
                "description": "Get the status of an eval run",
                "operationId": "get_eval_run_status_evals_runs__eval_run_id__get",
                "parameters": [
                    {
                        "name": "eval_run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Eval Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvalRunResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evals/runs/": {
            "get": {
                "tags": ["evaluations"],
                "summary": "List Eval Runs",
                "description": "List all eval runs",
                "operationId": "list_eval_runs_evals_runs__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EvalRunResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Eval Runs Evals Runs  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/google/store_token/": {
            "post": {
                "tags": ["google auth"],
                "summary": "Store Token",
                "operationId": "store_token_google_store_token__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/google/validate_token/": {
            "get": {
                "tags": ["google auth"],
                "summary": "Validate Token",
                "operationId": "validate_token_google_validate_token__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/rag/collections/": {
            "get": {
                "tags": ["rag"],
                "summary": "List Document Collections",
                "description": "List all document collections",
                "operationId": "list_document_collections_rag_collections__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentCollectionResponseSchema"
                                    },
                                    "type": "array",
                                    "title": "Response List Document Collections Rag Collections  Get"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["rag"],
                "summary": "Create Document Collection",
                "description": "Create a new document collection from uploaded files and metadata",
                "operationId": "create_document_collection_rag_collections__post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_document_collection_rag_collections__post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentCollectionResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/indices/": {
            "get": {
                "tags": ["rag"],
                "summary": "List Vector Indices",
                "description": "List all vector indices",
                "operationId": "list_vector_indices_rag_indices__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/VectorIndexResponseSchema"
                                    },
                                    "type": "array",
                                    "title": "Response List Vector Indices Rag Indices  Get"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["rag"],
                "summary": "Create Vector Index",
                "description": "Create a new vector index from a document collection",
                "operationId": "create_vector_index_rag_indices__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VectorIndexCreateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VectorIndexResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/indices/{index_id}/": {
            "delete": {
                "tags": ["rag"],
                "summary": "Delete Vector Index",
                "description": "Delete a vector index and its associated data",
                "operationId": "delete_vector_index_rag_indices__index_id___delete",
                "parameters": [
                    {
                        "name": "index_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Index Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["rag"],
                "summary": "Get Vector Index",
                "description": "Get details of a specific vector index",
                "operationId": "get_vector_index_rag_indices__index_id___get",
                "parameters": [
                    {
                        "name": "index_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Index Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VectorIndexResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/collections/{collection_id}/": {
            "get": {
                "tags": ["rag"],
                "summary": "Get Document Collection",
                "description": "Get document collection details.",
                "operationId": "get_document_collection_rag_collections__collection_id___get",
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Collection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentCollectionResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["rag"],
                "summary": "Delete Document Collection",
                "description": "Delete a document collection and its associated data",
                "operationId": "delete_document_collection_rag_collections__collection_id___delete",
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Collection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/collections/{collection_id}/progress/": {
            "get": {
                "tags": ["rag"],
                "summary": "Get Collection Progress",
                "description": "Get document collection processing progress.",
                "operationId": "get_collection_progress_rag_collections__collection_id__progress__get",
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Collection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingProgressSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/indices/{index_id}/progress/": {
            "get": {
                "tags": ["rag"],
                "summary": "Get Index Progress",
                "description": "Get the processing progress of a vector index",
                "operationId": "get_index_progress_rag_indices__index_id__progress__get",
                "parameters": [
                    {
                        "name": "index_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Index Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingProgressSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/collections/{collection_id}/documents/": {
            "post": {
                "tags": ["rag"],
                "summary": "Add Documents To Collection",
                "description": "Add documents to an existing collection.",
                "operationId": "add_documents_to_collection_rag_collections__collection_id__documents__post",
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Collection Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_add_documents_to_collection_rag_collections__collection_id__documents__post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentCollectionResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["rag"],
                "summary": "Get Collection Documents",
                "description": "Get all documents and their chunks for a collection.",
                "operationId": "get_collection_documents_rag_collections__collection_id__documents__get",
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Collection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentWithChunksSchema"
                                    },
                                    "title": "Response Get Collection Documents Rag Collections  Collection Id  Documents  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/collections/{collection_id}/documents/{document_id}/": {
            "delete": {
                "tags": ["rag"],
                "summary": "Delete Document From Collection",
                "description": "Delete a document from a collection.",
                "operationId": "delete_document_from_collection_rag_collections__collection_id__documents__document_id___delete",
                "parameters": [
                    {
                        "name": "collection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Collection Id"
                        }
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Document Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/collections/preview_chunk/": {
            "post": {
                "tags": ["rag"],
                "summary": "Preview Chunk",
                "description": "Preview how a document would be chunked with given configuration",
                "operationId": "preview_chunk_rag_collections_preview_chunk__post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_preview_chunk_rag_collections_preview_chunk__post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Preview Chunk Rag Collections Preview Chunk  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rag/indices/{index_id}/retrieve/": {
            "post": {
                "tags": ["rag"],
                "summary": "Retrieve From Index",
                "description": "Retrieve relevant chunks from a vector index based on a query",
                "operationId": "retrieve_from_index_rag_indices__index_id__retrieve__post",
                "parameters": [
                    {
                        "name": "index_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Index Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RetrievalRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrievalResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{workflow_id}": {
            "get": {
                "tags": ["files"],
                "summary": "List Workflow Files",
                "description": "List all files for a specific workflow",
                "operationId": "list_workflow_files_files__workflow_id__get",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileResponseSchema"
                                    },
                                    "title": "Response List Workflow Files Files  Workflow Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["files"],
                "summary": "Delete Workflow Files",
                "description": "Delete all files for a workflow",
                "operationId": "delete_workflow_files_files__workflow_id__delete",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/": {
            "get": {
                "tags": ["files"],
                "summary": "List All Files",
                "description": "List all files across all workflows",
                "operationId": "list_all_files_files__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/FileResponseSchema"
                                    },
                                    "type": "array",
                                    "title": "Response List All Files Files  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{workflow_id}/{filename}": {
            "delete": {
                "tags": ["files"],
                "summary": "Delete File",
                "description": "Delete a specific file",
                "operationId": "delete_file_files__workflow_id___filename__delete",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    },
                    {
                        "name": "filename",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Filename"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{file_path}": {
            "get": {
                "tags": ["files"],
                "summary": "Get File",
                "description": "Get a specific file",
                "operationId": "get_file_files__file_path__get",
                "parameters": [
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "File Path"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/generate_schema/": {
            "post": {
                "tags": ["ai"],
                "summary": "Generate Schema",
                "operationId": "generate_schema_ai_generate_schema__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Generate Schema Ai Generate Schema  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/generate_message/": {
            "post": {
                "tags": ["ai"],
                "summary": "Generate Message",
                "operationId": "generate_message_ai_generate_message__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageGenerationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Generate Message Ai Generate Message  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/": {
            "post": {
                "tags": ["users"],
                "summary": "Create User",
                "description": "Create a new user.",
                "operationId": "create_user_user__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["users"],
                "summary": "List Users",
                "description": "List users with pagination.",
                "operationId": "list_users_user__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{user_id}/": {
            "get": {
                "tags": ["users"],
                "summary": "Get User",
                "description": "Get a specific user by ID.",
                "operationId": "get_user_user__user_id___get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["users"],
                "summary": "Update User",
                "description": "Update a user.",
                "operationId": "update_user_user__user_id___patch",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["users"],
                "summary": "Delete User",
                "description": "Delete a user.",
                "operationId": "delete_user_user__user_id___delete",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session/": {
            "post": {
                "tags": ["sessions"],
                "summary": "Create Session",
                "description": "Create a new session.",
                "operationId": "create_session_session__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["sessions"],
                "summary": "List Sessions",
                "description": "List sessions with pagination and optional user filtering.",
                "operationId": "list_sessions_session__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session/{session_id}/": {
            "get": {
                "tags": ["sessions"],
                "summary": "Get Session",
                "description": "Get a specific session by ID.",
                "operationId": "get_session_session__session_id___get",
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Session Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["sessions"],
                "summary": "Delete Session",
                "description": "Delete a session.",
                "operationId": "delete_session_session__session_id___delete",
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Session Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session/test/": {
            "post": {
                "tags": ["sessions"],
                "summary": "Create Test Session",
                "description": "Create or reuse a test user and session.\n\nIf a test user exists, it will be reused.\nIf an empty test session exists for the same workflow, it will be reused.\nOtherwise, a new session will be created.",
                "operationId": "create_test_session_session_test__post",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIKey": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "value": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "APIKey"
            },
            "BatchRunRequestSchema": {
                "properties": {
                    "dataset_id": {
                        "type": "string",
                        "title": "Dataset Id"
                    },
                    "mini_batch_size": {
                        "type": "integer",
                        "title": "Mini Batch Size",
                        "default": 10
                    }
                },
                "type": "object",
                "required": ["dataset_id"],
                "title": "BatchRunRequestSchema"
            },
            "Body_add_documents_to_collection_rag_collections__collection_id__documents__post": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": ["files"],
                "title": "Body_add_documents_to_collection_rag_collections__collection_id__documents__post"
            },
            "Body_create_document_collection_rag_collections__post": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "metadata": {
                        "type": "string",
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": ["metadata"],
                "title": "Body_create_document_collection_rag_collections__post"
            },
            "Body_preview_chunk_rag_collections_preview_chunk__post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    },
                    "chunking_config": {
                        "type": "string",
                        "title": "Chunking Config"
                    }
                },
                "type": "object",
                "required": ["file", "chunking_config"],
                "title": "Body_preview_chunk_rag_collections_preview_chunk__post"
            },
            "Body_upload_dataset_ds__post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": ["file"],
                "title": "Body_upload_dataset_ds__post"
            },
            "Body_upload_test_files_wf_upload_test_files__post": {
                "properties": {
                    "workflow_id": {
                        "type": "string",
                        "title": "Workflow Id"
                    },
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "node_id": {
                        "type": "string",
                        "title": "Node Id"
                    }
                },
                "type": "object",
                "required": ["workflow_id", "files", "node_id"],
                "title": "Body_upload_test_files_wf_upload_test_files__post"
            },
            "ChatCompletionRequest": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "messages": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Messages"
                    },
                    "functions": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Functions"
                    },
                    "function_call": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Function Call"
                    },
                    "temperature": {
                        "type": "number",
                        "title": "Temperature",
                        "default": 0.7
                    },
                    "top_p": {
                        "type": "number",
                        "title": "Top P",
                        "default": 0.9
                    },
                    "n": {
                        "type": "integer",
                        "title": "N",
                        "default": 1
                    },
                    "stream": {
                        "type": "boolean",
                        "title": "Stream",
                        "default": false
                    },
                    "stop": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop"
                    },
                    "max_tokens": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Tokens"
                    },
                    "presence_penalty": {
                        "type": "number",
                        "title": "Presence Penalty",
                        "default": 0
                    },
                    "frequency_penalty": {
                        "type": "number",
                        "title": "Frequency Penalty",
                        "default": 0
                    },
                    "logit_bias": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "number"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logit Bias"
                    },
                    "user": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User"
                    }
                },
                "type": "object",
                "required": ["model", "messages"],
                "title": "ChatCompletionRequest"
            },
            "ChatCompletionResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object"
                    },
                    "created": {
                        "type": "integer",
                        "title": "Created"
                    },
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "choices": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Choices"
                    },
                    "usage": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "type": "object",
                        "title": "Usage"
                    }
                },
                "type": "object",
                "required": ["id", "object", "created", "model", "choices", "usage"],
                "title": "ChatCompletionResponse"
            },
            "ChunkMetadataSchema": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "chunk_id": {
                        "type": "string",
                        "title": "Chunk Id"
                    },
                    "document_title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Document Title"
                    },
                    "page_number": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Page Number"
                    },
                    "chunk_number": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Number"
                    }
                },
                "type": "object",
                "required": ["document_id", "chunk_id"],
                "title": "ChunkMetadataSchema",
                "description": "Schema for chunk metadata in retrieval response"
            },
            "CohereEncodingFormat": {
                "type": "string",
                "enum": ["float", "int8", "uint8", "binary", "ubinary"],
                "title": "CohereEncodingFormat"
            },
            "DatasetResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "filename": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": ["id", "name", "description", "filename", "created_at", "updated_at"],
                "title": "DatasetResponseSchema"
            },
            "DocumentChunkMetadataSchema": {
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/Source",
                        "default": "text"
                    },
                    "source_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source Id"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "author": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Author"
                    },
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "custom_metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Metadata"
                    },
                    "document_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Document Id"
                    },
                    "chunk_index": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Index"
                    }
                },
                "type": "object",
                "title": "DocumentChunkMetadataSchema",
                "description": "Metadata for a document chunk."
            },
            "DocumentChunkSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/DocumentChunkMetadataSchema"
                    },
                    "embedding": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embedding"
                    }
                },
                "type": "object",
                "required": ["id", "text", "metadata"],
                "title": "DocumentChunkSchema",
                "description": "A chunk of a document with its metadata and embedding."
            },
            "DocumentCollectionResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At"
                    },
                    "document_count": {
                        "type": "integer",
                        "title": "Document Count"
                    },
                    "chunk_count": {
                        "type": "integer",
                        "title": "Chunk Count"
                    },
                    "error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Message"
                    }
                },
                "type": "object",
                "required": ["id", "name", "status", "created_at", "updated_at", "document_count", "chunk_count"],
                "title": "DocumentCollectionResponseSchema",
                "description": "Response model for document collection operations"
            },
            "DocumentMetadataSchema": {
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/Source",
                        "default": "text"
                    },
                    "source_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source Id"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "author": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Author"
                    },
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "custom_metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Metadata"
                    }
                },
                "type": "object",
                "title": "DocumentMetadataSchema",
                "description": "Metadata for a document."
            },
            "DocumentWithChunksSchema": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DocumentMetadataSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "chunks": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentChunkSchema"
                        },
                        "type": "array",
                        "title": "Chunks"
                    }
                },
                "type": "object",
                "required": ["text"],
                "title": "DocumentWithChunksSchema",
                "description": "A document with its chunks."
            },
            "EmbeddingConfigSchema": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "vector_db": {
                        "type": "string",
                        "title": "Vector Db"
                    },
                    "search_strategy": {
                        "type": "string",
                        "title": "Search Strategy"
                    },
                    "semantic_weight": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Semantic Weight"
                    },
                    "keyword_weight": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Keyword Weight"
                    },
                    "top_k": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top K"
                    },
                    "score_threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score Threshold"
                    }
                },
                "type": "object",
                "required": ["model", "vector_db", "search_strategy"],
                "title": "EmbeddingConfigSchema"
            },
            "EmbeddingModelConfig": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/EmbeddingProvider"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "dimensions": {
                        "type": "integer",
                        "title": "Dimensions",
                        "default": 1536
                    },
                    "max_input_length": {
                        "type": "integer",
                        "title": "Max Input Length",
                        "default": 8191
                    },
                    "supported_encoding_formats": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/CohereEncodingFormat"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Supported Encoding Formats"
                    },
                    "required_env_vars": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Required Env Vars"
                    }
                },
                "type": "object",
                "required": ["id", "provider", "name"],
                "title": "EmbeddingModelConfig"
            },
            "EmbeddingProvider": {
                "type": "string",
                "enum": ["OpenAI", "AzureOpenAI", "Cohere", "Voyage", "Mistral", "Gemini"],
                "title": "EmbeddingProvider"
            },
            "EvalRunRequest": {
                "properties": {
                    "workflow_id": {
                        "type": "string",
                        "title": "Workflow Id"
                    },
                    "eval_name": {
                        "type": "string",
                        "title": "Eval Name"
                    },
                    "output_variable": {
                        "type": "string",
                        "title": "Output Variable"
                    },
                    "num_samples": {
                        "type": "integer",
                        "title": "Num Samples",
                        "default": 10
                    }
                },
                "type": "object",
                "required": ["workflow_id", "eval_name", "output_variable"],
                "title": "EvalRunRequest"
            },
            "EvalRunResponse": {
                "properties": {
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "eval_name": {
                        "type": "string",
                        "title": "Eval Name"
                    },
                    "workflow_id": {
                        "type": "string",
                        "title": "Workflow Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/EvalRunStatusEnum"
                    },
                    "start_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Time"
                    },
                    "end_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Time"
                    },
                    "results": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Results"
                    }
                },
                "type": "object",
                "required": ["run_id", "eval_name", "workflow_id", "status", "start_time", "end_time"],
                "title": "EvalRunResponse"
            },
            "EvalRunStatusEnum": {
                "type": "string",
                "enum": ["PENDING", "RUNNING", "COMPLETED", "FAILED"],
                "title": "EvalRunStatusEnum"
            },
            "FileResponseSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created"
                    },
                    "workflow_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workflow Id"
                    }
                },
                "type": "object",
                "required": ["name", "path", "size", "created"],
                "title": "FileResponseSchema"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "MessageGenerationRequest": {
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "message_type": {
                        "type": "string",
                        "enum": ["system", "user"],
                        "title": "Message Type"
                    },
                    "existing_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Existing Message"
                    },
                    "context": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Context"
                    },
                    "available_variables": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Available Variables"
                    }
                },
                "type": "object",
                "required": ["description", "message_type"],
                "title": "MessageGenerationRequest"
            },
            "MessageResponse": {
                "properties": {
                    "content": {
                        "type": "object",
                        "title": "Content"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "session_id": {
                        "type": "string",
                        "title": "Session Id"
                    },
                    "run_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Run Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": ["content", "id", "session_id", "run_id", "created_at", "updated_at"],
                "title": "MessageResponse"
            },
            "OutputFileResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "file_name": {
                        "type": "string",
                        "title": "File Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": ["id", "file_name", "created_at", "updated_at"],
                "title": "OutputFileResponseSchema"
            },
            "PartialRunRequestSchema": {
                "properties": {
                    "node_id": {
                        "type": "string",
                        "title": "Node Id"
                    },
                    "rerun_predecessors": {
                        "type": "boolean",
                        "title": "Rerun Predecessors",
                        "default": false
                    },
                    "initial_inputs": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "object"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial Inputs"
                    },
                    "partial_outputs": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "items": {
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    ]
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Partial Outputs"
                    }
                },
                "type": "object",
                "required": ["node_id"],
                "title": "PartialRunRequestSchema"
            },
            "PauseAction": {
                "type": "string",
                "enum": ["APPROVE", "DECLINE", "OVERRIDE"],
                "title": "PauseAction",
                "description": "Actions that can be taken on a paused workflow."
            },
            "PauseHistoryResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "node_id": {
                        "type": "string",
                        "title": "Node Id"
                    },
                    "pause_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pause Message"
                    },
                    "pause_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Pause Time"
                    },
                    "resume_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Resume Time"
                    },
                    "resume_user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Resume User Id"
                    },
                    "resume_action": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PauseAction"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "input_data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Input Data"
                    },
                    "comments": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Comments"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "run_id",
                    "node_id",
                    "pause_message",
                    "pause_time",
                    "resume_time",
                    "resume_user_id",
                    "resume_action",
                    "input_data",
                    "comments"
                ],
                "title": "PauseHistoryResponseSchema",
                "description": "Schema for pause information from a node's output."
            },
            "PausedWorkflowResponseSchema": {
                "properties": {
                    "run": {
                        "$ref": "#/components/schemas/RunResponseSchema"
                    },
                    "current_pause": {
                        "$ref": "#/components/schemas/PauseHistoryResponseSchema"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/WorkflowDefinitionSchema-Output"
                    }
                },
                "type": "object",
                "required": ["run", "current_pause", "workflow"],
                "title": "PausedWorkflowResponseSchema",
                "description": "Schema for a paused workflow, including its current pause state."
            },
            "ProcessingProgressSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "default": "pending"
                    },
                    "progress": {
                        "type": "number",
                        "title": "Progress",
                        "default": 0
                    },
                    "current_step": {
                        "type": "string",
                        "title": "Current Step",
                        "default": "initializing"
                    },
                    "total_files": {
                        "type": "integer",
                        "title": "Total Files",
                        "default": 0
                    },
                    "processed_files": {
                        "type": "integer",
                        "title": "Processed Files",
                        "default": 0
                    },
                    "total_chunks": {
                        "type": "integer",
                        "title": "Total Chunks",
                        "default": 0
                    },
                    "processed_chunks": {
                        "type": "integer",
                        "title": "Processed Chunks",
                        "default": 0
                    },
                    "error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Message"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": ["id", "created_at", "updated_at"],
                "title": "ProcessingProgressSchema",
                "description": "Base model for tracking processing progress"
            },
            "ResumeRunRequestSchema": {
                "properties": {
                    "inputs": {
                        "type": "object",
                        "title": "Inputs"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "action": {
                        "$ref": "#/components/schemas/PauseAction"
                    },
                    "comments": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Comments"
                    }
                },
                "type": "object",
                "required": ["inputs", "user_id", "action"],
                "title": "ResumeRunRequestSchema",
                "description": "Schema for resuming a paused workflow run."
            },
            "RetrievalRequestSchema": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query"
                    },
                    "top_k": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top K",
                        "default": 5
                    },
                    "score_threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score Threshold"
                    },
                    "semantic_weight": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Semantic Weight",
                        "default": 1
                    },
                    "keyword_weight": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Keyword Weight"
                    }
                },
                "type": "object",
                "required": ["query"],
                "title": "RetrievalRequestSchema",
                "description": "Request model for retrieving from vector index"
            },
            "RetrievalResponseSchema": {
                "properties": {
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/RetrievalResultSchema"
                        },
                        "type": "array",
                        "title": "Results"
                    },
                    "total_results": {
                        "type": "integer",
                        "title": "Total Results"
                    }
                },
                "type": "object",
                "required": ["results", "total_results"],
                "title": "RetrievalResponseSchema",
                "description": "Response model for retrieval operations"
            },
            "RetrievalResultSchema": {
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "score": {
                        "type": "number",
                        "title": "Score"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/ChunkMetadataSchema"
                    }
                },
                "type": "object",
                "required": ["text", "score", "metadata"],
                "title": "RetrievalResultSchema",
                "description": "Schema for a single retrieval result"
            },
            "RunResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "workflow_id": {
                        "type": "string",
                        "title": "Workflow Id"
                    },
                    "workflow_version_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workflow Version Id"
                    },
                    "workflow_version": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowVersionResponseSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "status": {
                        "$ref": "#/components/schemas/RunStatus"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Time"
                    },
                    "initial_inputs": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "object"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial Inputs"
                    },
                    "outputs": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "object"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Outputs"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/components/schemas/TaskResponseSchema"
                        },
                        "type": "array",
                        "title": "Tasks",
                        "default": []
                    },
                    "parent_run_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Run Id"
                    },
                    "run_type": {
                        "type": "string",
                        "title": "Run Type",
                        "default": "interactive"
                    },
                    "output_file_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Output File Id"
                    },
                    "input_dataset_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Input Dataset Id"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "duration": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Duration",
                        "readOnly": true
                    },
                    "percentage_complete": {
                        "type": "number",
                        "title": "Percentage Complete",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": ["id", "workflow_id", "status", "start_time", "duration", "percentage_complete"],
                "title": "RunResponseSchema"
            },
            "RunStatus": {
                "type": "string",
                "enum": ["PENDING", "RUNNING", "COMPLETED", "FAILED", "PAUSED", "CANCELED"],
                "title": "RunStatus"
            },
            "SchemaGenerationRequest": {
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "existing_schema": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Existing Schema"
                    }
                },
                "type": "object",
                "required": ["description"],
                "title": "SchemaGenerationRequest"
            },
            "SessionCreate": {
                "properties": {
                    "workflow_id": {
                        "type": "string",
                        "title": "Workflow Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "external_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "External Id"
                    }
                },
                "type": "object",
                "required": ["workflow_id", "user_id"],
                "title": "SessionCreate"
            },
            "SessionListResponse": {
                "properties": {
                    "sessions": {
                        "items": {
                            "$ref": "#/components/schemas/SessionResponse"
                        },
                        "type": "array",
                        "title": "Sessions"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    }
                },
                "type": "object",
                "required": ["sessions", "total"],
                "title": "SessionListResponse"
            },
            "SessionResponse": {
                "properties": {
                    "workflow_id": {
                        "type": "string",
                        "title": "Workflow Id"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/MessageResponse"
                        },
                        "type": "array",
                        "title": "Messages"
                    }
                },
                "type": "object",
                "required": ["workflow_id", "id", "user_id", "created_at", "updated_at", "messages"],
                "title": "SessionResponse"
            },
            "Source": {
                "type": "string",
                "enum": ["file", "url", "text"],
                "title": "Source"
            },
            "SpurType": {
                "type": "string",
                "enum": ["workflow", "chatbot", "agent"],
                "title": "SpurType",
                "description": "Enum representing the type of spur.\n\nWorkflow: Standard workflow with nodes and edges\nChatbot: Essentially a workflow with chat compatible IO and session management\nAgent: Autonomous agent node that calls tools, also has chat compatible IO\n    and session management"
            },
            "StartRunRequestSchema": {
                "properties": {
                    "initial_inputs": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "object"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial Inputs"
                    },
                    "parent_run_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Run Id"
                    },
                    "files": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Files"
                    }
                },
                "type": "object",
                "title": "StartRunRequestSchema"
            },
            "TaskResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "node_id": {
                        "type": "string",
                        "title": "Node Id"
                    },
                    "parent_task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Task Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskStatus"
                    },
                    "inputs": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Inputs"
                    },
                    "outputs": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Outputs"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    },
                    "start_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Time"
                    },
                    "end_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Time"
                    },
                    "subworkflow": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowDefinitionSchema-Output"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "subworkflow_output": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subworkflow Output"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "run_id",
                    "node_id",
                    "parent_task_id",
                    "status",
                    "inputs",
                    "outputs",
                    "error",
                    "start_time",
                    "end_time",
                    "subworkflow",
                    "subworkflow_output"
                ],
                "title": "TaskResponseSchema"
            },
            "TaskStatus": {
                "type": "string",
                "enum": ["PENDING", "RUNNING", "COMPLETED", "FAILED", "CANCELED", "PAUSED"],
                "title": "TaskStatus"
            },
            "TemplateSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "features": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Features"
                    },
                    "file_name": {
                        "type": "string",
                        "title": "File Name"
                    }
                },
                "type": "object",
                "required": ["name", "description", "features", "file_name"],
                "title": "TemplateSchema",
                "description": "Template schema."
            },
            "TokenInput": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "expires_in": {
                        "type": "integer",
                        "title": "Expires In"
                    }
                },
                "type": "object",
                "required": ["access_token", "expires_in"],
                "title": "TokenInput"
            },
            "UserCreate": {
                "properties": {
                    "external_id": {
                        "type": "string",
                        "title": "External Id",
                        "description": "External ID for the user"
                    },
                    "user_metadata": {
                        "type": "object",
                        "title": "User Metadata",
                        "description": "Additional user metadata"
                    }
                },
                "type": "object",
                "required": ["external_id"],
                "title": "UserCreate"
            },
            "UserListResponse": {
                "properties": {
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total",
                        "description": "Total number of users"
                    }
                },
                "type": "object",
                "required": ["users", "total"],
                "title": "UserListResponse"
            },
            "UserResponse": {
                "properties": {
                    "external_id": {
                        "type": "string",
                        "title": "External Id",
                        "description": "External ID for the user"
                    },
                    "user_metadata": {
                        "type": "object",
                        "title": "User Metadata",
                        "description": "Additional user metadata"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Internal ID with prefix (e.g. U1)"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": ["external_id", "id", "created_at", "updated_at"],
                "title": "UserResponse"
            },
            "UserUpdate": {
                "properties": {
                    "external_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "External Id",
                        "description": "External ID for the user"
                    },
                    "user_metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Metadata",
                        "description": "Additional user metadata"
                    }
                },
                "type": "object",
                "title": "UserUpdate"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": ["loc", "msg", "type"],
                "title": "ValidationError"
            },
            "VectorIndexCreateSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "collection_id": {
                        "type": "string",
                        "title": "Collection Id"
                    },
                    "embedding": {
                        "$ref": "#/components/schemas/EmbeddingConfigSchema"
                    }
                },
                "type": "object",
                "required": ["name", "collection_id", "embedding"],
                "title": "VectorIndexCreateSchema",
                "description": "Request model for creating a vector index"
            },
            "VectorIndexResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "collection_id": {
                        "type": "string",
                        "title": "Collection Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At"
                    },
                    "document_count": {
                        "type": "integer",
                        "title": "Document Count"
                    },
                    "chunk_count": {
                        "type": "integer",
                        "title": "Chunk Count"
                    },
                    "error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Message"
                    },
                    "embedding_model": {
                        "type": "string",
                        "title": "Embedding Model"
                    },
                    "vector_db": {
                        "type": "string",
                        "title": "Vector Db"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "collection_id",
                    "status",
                    "created_at",
                    "updated_at",
                    "document_count",
                    "chunk_count",
                    "embedding_model",
                    "vector_db"
                ],
                "title": "VectorIndexResponseSchema",
                "description": "Response model for vector index operations"
            },
            "VectorStoreConfig": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "requires_api_key": {
                        "type": "boolean",
                        "title": "Requires Api Key",
                        "default": false
                    },
                    "api_key_env_var": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key Env Var"
                    },
                    "required_env_vars": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Required Env Vars"
                    }
                },
                "type": "object",
                "required": ["id", "name", "description"],
                "title": "VectorStoreConfig"
            },
            "WorkflowCreateRequestSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    },
                    "definition": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowDefinitionSchema-Input"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "WorkflowCreateRequestSchema",
                "description": "A request to create a new workflow."
            },
            "WorkflowDefinitionSchema-Input": {
                "properties": {
                    "nodes": {
                        "items": {
                            "$ref": "#/components/schemas/WorkflowNodeSchema-Input"
                        },
                        "type": "array",
                        "title": "Nodes"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/components/schemas/WorkflowLinkSchema"
                        },
                        "type": "array",
                        "title": "Links"
                    },
                    "test_inputs": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Test Inputs",
                        "default": []
                    },
                    "spur_type": {
                        "$ref": "#/components/schemas/SpurType",
                        "default": "workflow"
                    }
                },
                "type": "object",
                "required": ["nodes", "links"],
                "title": "WorkflowDefinitionSchema",
                "description": "A workflow is a DAG of nodes."
            },
            "WorkflowDefinitionSchema-Output": {
                "properties": {
                    "nodes": {
                        "items": {
                            "$ref": "#/components/schemas/WorkflowNodeSchema-Output"
                        },
                        "type": "array",
                        "title": "Nodes"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/components/schemas/WorkflowLinkSchema"
                        },
                        "type": "array",
                        "title": "Links"
                    },
                    "test_inputs": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Test Inputs",
                        "default": []
                    },
                    "spur_type": {
                        "$ref": "#/components/schemas/SpurType",
                        "default": "workflow"
                    }
                },
                "type": "object",
                "required": ["nodes", "links"],
                "title": "WorkflowDefinitionSchema",
                "description": "A workflow is a DAG of nodes."
            },
            "WorkflowLinkSchema": {
                "properties": {
                    "source_id": {
                        "type": "string",
                        "title": "Source Id"
                    },
                    "target_id": {
                        "type": "string",
                        "title": "Target Id"
                    },
                    "source_handle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source Handle"
                    },
                    "target_handle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Target Handle"
                    }
                },
                "type": "object",
                "required": ["source_id", "target_id"],
                "title": "WorkflowLinkSchema",
                "description": "Connect a source node to a target node.\n\nThe target node will receive the source node's output in its input dictionary."
            },
            "WorkflowNodeCoordinatesSchema": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X"
                    },
                    "y": {
                        "type": "number",
                        "title": "Y"
                    }
                },
                "type": "object",
                "required": ["x", "y"],
                "title": "WorkflowNodeCoordinatesSchema",
                "description": "Coordinates for a node in a workflow."
            },
            "WorkflowNodeDimensionsSchema": {
                "properties": {
                    "width": {
                        "type": "number",
                        "title": "Width"
                    },
                    "height": {
                        "type": "number",
                        "title": "Height"
                    }
                },
                "type": "object",
                "required": ["width", "height"],
                "title": "WorkflowNodeDimensionsSchema",
                "description": "Dimensions for a node in a workflow."
            },
            "WorkflowNodeSchema-Input": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "default": ""
                    },
                    "parent_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Id"
                    },
                    "node_type": {
                        "type": "string",
                        "title": "Node Type"
                    },
                    "config": {
                        "type": "object",
                        "title": "Config",
                        "default": {}
                    },
                    "coordinates": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowNodeCoordinatesSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "dimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowNodeDimensionsSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "subworkflow": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowDefinitionSchema-Input"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": ["id", "node_type"],
                "title": "WorkflowNodeSchema",
                "description": "A single step in a workflow.\n\nEach node receives a dictionary mapping predecessor node IDs to their outputs.\nFor dynamic schema nodes, the output schema is defined in the config dictionary.\nFor static schema nodes, the output schema is defined in the node class implementation."
            },
            "WorkflowNodeSchema-Output": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "default": ""
                    },
                    "parent_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Id"
                    },
                    "node_type": {
                        "type": "string",
                        "title": "Node Type"
                    },
                    "config": {
                        "type": "object",
                        "title": "Config",
                        "default": {}
                    },
                    "coordinates": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowNodeCoordinatesSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "dimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowNodeDimensionsSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "subworkflow": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WorkflowDefinitionSchema-Output"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": ["id", "node_type"],
                "title": "WorkflowNodeSchema",
                "description": "A single step in a workflow.\n\nEach node receives a dictionary mapping predecessor node IDs to their outputs.\nFor dynamic schema nodes, the output schema is defined in the config dictionary.\nFor static schema nodes, the output schema is defined in the node class implementation."
            },
            "WorkflowResponseSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/WorkflowDefinitionSchema-Output"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": ["id", "name", "description", "definition", "created_at", "updated_at"],
                "title": "WorkflowResponseSchema",
                "description": "A response containing the details of a workflow."
            },
            "WorkflowVersionResponseSchema": {
                "properties": {
                    "version": {
                        "type": "integer",
                        "title": "Version"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "definition": {
                        "title": "Definition"
                    },
                    "definition_hash": {
                        "type": "string",
                        "title": "Definition Hash"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "version",
                    "name",
                    "description",
                    "definition",
                    "definition_hash",
                    "created_at",
                    "updated_at"
                ],
                "title": "WorkflowVersionResponseSchema",
                "description": "A response containing the details of a workflow version."
            }
        }
    }
}
